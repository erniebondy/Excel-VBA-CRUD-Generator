VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "GlobalControlManager"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit
''' Add reference Microsoft Scripting Runtime



Dim WithEvents GlForm As MSForms.UserForm
Attribute GlForm.VB_VarHelpID = -1
Dim WithEvents GlLabel As MSForms.Label
Attribute GlLabel.VB_VarHelpID = -1
Dim GlFormObj As Object

Dim GlControls As Scripting.Dictionary
Dim GlActiveControl 'As MSForms.Control or MSForms.UserForm

Public Event GlobalMouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single, ByVal Src As String)

''' Explicitly using type 'MSForms.UserForm' results in the UserForm
''' variable to hold some data - like the forms' controls.
''' But using type 'object' gives the proper form type.
''' For instance FrmTest will result in the UserForm variable
''' to be of type Object/FrmTest as opposed to just UserForm/UserForm
''' This may have something to do with the Attribute VB_PredeclaredId = True
''' but that's pure speculation
Sub GlManagerInit(UserForm As Object)  'As MSForms.UserForm

  Set GlForm = UserForm
  Set GlFormObj = UserForm
  
  'Label
  'TextBox
  'ComboBox
  'ListBox
  'CommandButton
  'Frame
  'MultiPage
  
  Set GlControls = New Scripting.Dictionary
  GlControls.Add GlFormObj.Name, GlForm
  
  Dim I As Integer
  For I = 0 To GlForm.Controls.Count - 1
    
    '' It would be nice to have TypeOf in a Select statement
    If TypeOf GlForm.Controls(I) Is MSForms.Label Then
      Dim Lbl As MSForms.Label
      Set Lbl = GlForm.Controls(I)
      GlControls.Add Lbl.Name, Lbl
    End If
  Next
  
End Sub

'Private Sub Global_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'
'End Sub

Private Sub GlForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
 RaiseEvent GlobalMouseMove(Button, Shift, X, Y, GlFormObj.Name)
End Sub

Private Sub GlLabel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
  RaiseEvent GlobalMouseMove(Button, Shift, GlLabel.Left + X, GlLabel.Top + Y, GlLabel.Name)
End Sub
